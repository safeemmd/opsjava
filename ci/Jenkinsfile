/*
    Helm install
 */
def helmInstall (namespace, release) {
    echo "Installing ${release} in ${namespace}"

    script {
        release = "${release}-${namespace}"
        sh "helm repo add helm ${HELM_REPO}; helm repo update"
        sh """
            cd ${WORKSPACE}/opsjava/ci/opstreeapp/
            helm upgrade --install --namespace ${namespace} ${release} \
                --set image.repository=${DCK_REPO1},image.tag=${BUILD_NUMBER} .
        """
        sh "sleep 5"
    }
}

pipeline {
	agent { any }
	environment {
		DCK_REPO1 = "safeem/opstree"
		NAMESPACE = "opstreeapp"
	}
	stages {
		stage("Clone code") {
			git branch: 'safeem-1', poll: false, url: 'https://github.com/safeemmd/opsjava.git'

		}

		stage('Build and push') {
			sh """
			cd opsjava/
			docker build -t ${DCK_REPO1}:${BUILD_NUMBER} .
			docker push ${DCK_REPO1}:${BUILD_NUMBER}
			"""

		}

		stage('Helm deploy') {
			steps {
				script {
					sh """
						helm delete opstreeapp
					"""
					helmInstall(env.NAMESPACE, "opstreeapp")
				}
			}
			
		}

	}
}